<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rdy = 0;
selected = noone;

with (oDropDown)
    {
    if (other.id != id)
        instance_destroy();
    }

with (controller)
    {
    placing_status = 0;
    ds_list_clear(free_list);
    ds_list_clear(bez_list);
    }
    
//items
desc_list = ds_list_create();
sep_list = ds_list_create();
scr_list = ds_list_create();
hl_list = ds_list_create();

//font
font = fnt_tooltip;

//size
total_width = 200;
item_padding = 8;       //space around each item
highlight_padding = 3;   //extra padding for highlight indicator
highlight_rad = 4;       //Radius for round rect highlight

//colors
bak_color = $252525;
border_color = c_dkgray;
highlight_color = c_teal;
icon_color = c_ltgray;
separator_color = c_dkgray;
text_color = c_gray;

bak_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(desc_list);
ds_list_destroy(scr_list);
ds_list_destroy(hl_list);
ds_list_destroy(sep_list);
instance_activate_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rdy = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!rdy) exit;

///Find Selected
var mx = device_mouse_x(0);
var my = device_mouse_y(0);

if(point_in_rectangle(mx, my, x1,ty1,x2,ty2))
{
    selected =  floor((my-ty1)/item_height);
}
else
{
    selected = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Only allow one box
if (!rdy) exit;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remove if not clicked
if (!rdy) exit;
if(selected == noone) or (selected &gt;= num)
{
    instance_destroy();
}
else
    event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Built in variables, do not change
x_offset = 0;
y_offset = 0;

item_height = font_get_size(font)+item_padding*2;

//calculate offsets to keep box on screen
total_height = item_height*num;


if(x &lt; view_xview)
{
    x_offset = view_xview-x+1;
}
else if(x + total_width &gt; view_xview+view_wport)
{
    x_offset = (view_xview+view_wview)-(x+total_width)+1;
}

if(y &lt; view_yview)
{
    y_offset = view_yview-y+1;
}
else if(y + total_height &gt; view_yview+view_hport)
{
    y_offset = -total_height;
}

x1 = x+x_offset;
x2 = x+total_width+x_offset;
ty1 = y+y_offset;
ty2 = y+total_height+y_offset;

instance_deactivate_region(x1,ty1,total_width,total_height,1,1);
instance_activate_object(controller);
instance_activate_object(obj_cursor);

alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Override me for each option
if (room = rm_ilda)
    {
    with (controller) 
        script_execute(ds_list_find_value(oDropDown.scr_list,oDropDown.selected));
    }
else if (room = rm_seq)
    {
    with (seqcontrol) 
        script_execute(ds_list_find_value(oDropDown.scr_list,oDropDown.selected));
    }

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!rdy) exit;


///Draw the box
draw_set_color(bak_color);
draw_set_alpha(bak_alpha);
draw_rectangle(x1,ty1,x2,ty2,false);
draw_set_alpha(1);
draw_set_color(border_color);
draw_rectangle(x1,ty1,x2,ty2,true);

draw_set_color(separator_color);

for(var i = 0; i &lt; num; i++)
{
    var y1 = y+(item_height*i)+y_offset+1;
    var y2 = y+(item_height*(i+1))+y_offset;
    
    draw_set_color(separator_color);
    
    if(ds_list_find_value(sep_list,i))
    {
        draw_line(x1,y1,x2,y1);
    }
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    if (ds_list_find_value(hl_list,i) == 0)
        draw_set_color(text_color);
    else
        draw_set_color(c_white);
    draw_text(x1+item_padding, y1+item_padding-2, ds_list_find_value(desc_list,i));
    
    if(i == selected)
    {
        draw_set_color(highlight_color);
        draw_set_alpha(.05);
        draw_roundrect_ext(x1+highlight_padding,y1+highlight_padding,x2-highlight_padding,y2-highlight_padding,highlight_rad,highlight_rad,false);
        draw_set_alpha(.8);
        draw_roundrect_ext(x1+highlight_padding,y1+highlight_padding,x2-highlight_padding,y2-highlight_padding,highlight_rad,highlight_rad,true);
        draw_set_alpha(1);
    }
}

draw_sprite(spr_cursor,9,obj_cursor.x,obj_cursor.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
