<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_anicolorselect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
moving = 0;

activecolor = controller.anicolor2;
redy = y+23-(colour_get_red(activecolor)/255*23);
greeny = y+23-(colour_get_green(activecolor)/255*23);
bluey = y+23-(colour_get_blue(activecolor)/255*23);

redx = x;
greenx = x+16;
bluex = x+32;

xplus70 = x+70;
yplus16 = y+16;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oDropDown))
    exit;
if (moving == 1) or ((moving) and keyboard_check(vk_control))
    {
    red = colour_get_red(controller.anicolor2);
    red -= (mouse_y-mouse_yprevious)*255/25;
    if (red &lt; 0) red = 0;
    if (red &gt; 255) red = 255;
    controller.anicolor2 = make_colour_rgb(red,colour_get_green(controller.anicolor2),colour_get_blue(controller.anicolor2));
    }
if (moving == 2) or ((moving) and keyboard_check(vk_control))
    {
    green = colour_get_green(controller.anicolor2);
    green -= (mouse_y-mouse_yprevious)*255/25;
    if (green &lt; 0) green = 0;
    if (green &gt; 255) green = 255;
    controller.anicolor2 = make_colour_rgb(colour_get_red(controller.anicolor2),green,colour_get_blue(controller.anicolor2));
    }
if (moving == 3) or ((moving) and keyboard_check(vk_control))
    {
    blue = colour_get_blue(controller.anicolor2);
    blue -= (mouse_y-mouse_yprevious)*255/25;
    if (blue &lt; 0) blue = 0;
    if (blue &gt; 255) blue = 255;
    controller.anicolor2 = make_colour_rgb(colour_get_red(controller.anicolor2),colour_get_green(controller.anicolor2),blue);
    }
    
mouse_yprevious = mouse_y;

visible = ((controller.colormode == "gradient") || (controller.colormode == "dash") || (controller.colormode == "func")) and (controller.anienable);

if (visible) and (mouse_x &gt; x) and (mouse_x &lt; (x+sprite_width)) and (mouse_y &gt; y) and ((mouse_y &lt; y+sprite_height))
    {
    controller.tooltip = "Changes secondary color at the end of the animation#(Sliders represent red, green and blue)#-&gt;Right click to enter a precise value";
    } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (moving)
{
    moving = 0;
    update_anicolors();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oDropDown))
    exit;
if (!visible) exit;

if (mouse_x &lt; (x+14))
    {
    ilda_dialog_num("ac2r","Enter value for RED from 0 to 255",colour_get_red(controller.anicolor2));
    
    }
else if (mouse_x &gt; (x+30))
    {
    ilda_dialog_num("ac2b","Enter value for BLUE from 0 to 255",colour_get_blue(controller.anicolor2));
   
    }
else 
    {
    ilda_dialog_num("ac2g","Enter value for GREEN from 0 to 255",colour_get_green(controller.anicolor2));
   
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oDropDown))
    exit;
if (!visible)
    exit;

if (mouse_x &lt; (x+16))
    moving = 1;
else if (mouse_x &gt; (x+32))
    moving = 3;
else moving = 2;

mouse_yprevious = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (moving)
    {
    activecolor = controller.anicolor2;
    redy = round(y+23-(colour_get_red(activecolor)/255*23));
    greeny = round(y+23-(colour_get_green(activecolor)/255*23));
    bluey = round(y+23-(colour_get_blue(activecolor)/255*23));
    }
draw_sprite(spr_anicolorselectred,(moving == 1),redx,redy);
draw_sprite(spr_anicolorselectgreen,(moving == 2),greenx,greeny);
draw_sprite(spr_anicolorselectblue,(moving == 3),bluex,bluey);

draw_set_circle_precision(8);
draw_set_colour(activecolor);
    draw_circle(x+70,y+16,10,0);
draw_set_color(c_aqua);
    draw_circle(x+70,y+16,10,1);
draw_set_circle_precision(24);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
