<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_addaudio</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt; x) and (mouse_x &lt; (x+sprite_width)) and (mouse_y &gt; y) and ((mouse_y &lt; y+sprite_height))
    {
    image_index = 1;
    controller.tooltip = "Load an audio file for the timeline";
    } 
else image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//dropdown_loadaudio();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (seqcontrol)
    {
    //UnloadFMOD();
    //LoadFMOD();
    //FMODinit(2,0);
    
    songinstance = 0;
    if (song) FMODSoundFree(song);
    songfile = get_open_filename_ext("","","","Select audio file");
    song = FMODSoundAdd(songfile,0,0);
    if (!song) 
        {
        show_message_async("Failed to load audio");
        exit;
        }
    songlength = FMODSoundGetLength(song);
    if (length &lt; songlength/1000*projectfps)
        {
        length = songlength/1000*projectfps;
        }
    FMODSoundSetGroup(song, 1);
    
    ds_list_clear(audio_list);
    parseinstance = FMODSoundPlay(song,0);
    FMODInstanceSetMuted(parseinstance,1);
    parsingaudio = 1;
    errorcheck = 0;
    deltatime = 0;    
    playing = 0;
    tlpos = 0;
    
    songinstance = FMODSoundPlay(song,1);

    
    
    /*FMODInstanceSetFrequency(songinstance,FMODInstanceGetFrequency(songinstance)/4);
    pitchshift = FMODInstanceAddEffect(songinstance, 11);
    FMODEffectSetParamValue(pitchshift, 0, 1.6);
    FMODEffectSetParamValue(pitchshift, 1, 4096*2);
    pitchshift = FMODInstanceAddEffect(songinstance, 11);
    FMODEffectSetParamValue(pitchshift, 0, 1.6);
    FMODEffectSetParamValue(pitchshift, 1, 4096*2);
    pitchshift = FMODInstanceAddEffect(songinstance, 11);
    FMODEffectSetParamValue(pitchshift, 0, 1.6);
    FMODEffectSetParamValue(pitchshift, 1, 4096*2);*/
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);

draw_set_color(c_black);
draw_set_alpha(1);
draw_set_font(fnt_tooltip);

if (seqcontrol.song == 0) draw_text(x+70,y+2,"No audio");
else
    {
    draw_text_ext(x+70,y+2,filename_name(seqcontrol.songfile),500,110);
    if (seqcontrol.parsingaudio == 1)
        draw_text(x+70,y+19,"Analyzing ...");
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
