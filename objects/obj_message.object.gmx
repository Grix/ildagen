<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>backgroundsurface = -1;
rdy = 0;
reap_color = 0;
reap_blank = 0;
reap_removeoverlap = 0;
reap_trans = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rdy = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (surface_exists(backgroundsurface))
    draw_background(backgroundsurface,0,0);*/
instance_deactivate_all(1);


switch (type)
    {
    case 0:
        {
        draw_set_font(fnt_bold);
        draw_set_color(c_ltgray);
        draw_rectangle(300,100,700,600,0);
        draw_set_color(c_black);
        draw_text(340,150,"Select what properties you want to reapply");
        draw_set_color(c_gray);
        draw_rectangle(400,500,600,550,0);
        draw_set_color(c_black);
        draw_text(490,515,"OK");
        
        draw_sprite(spr_checkbox,reap_color,380,250);
        draw_text(450,250,"Color");
        draw_sprite(spr_checkbox,reap_blank,380,300);
        draw_text(450,300,"Blanking");
        draw_sprite(spr_checkbox,reap_trans,380,350);
        draw_text(450,350,"Displacement");
        draw_sprite(spr_checkbox,reap_removeoverlap,380,400);
        draw_text(450,400,"Remove overlapping points");
        
        break;
        }
    }



if (mouse_check_button_pressed(mb_left) &amp;&amp; (mouse_y &gt; 250) &amp;&amp; (mouse_y &lt; 282) &amp;&amp; (mouse_x &gt; 380) &amp;&amp; (mouse_x &lt; 412))
    {
    reap_color = !reap_color;
    }
else if (mouse_check_button_pressed(mb_left) &amp;&amp; (mouse_y &gt; 300) &amp;&amp; (mouse_y &lt; 332) &amp;&amp; (mouse_x &gt; 380) &amp;&amp; (mouse_x &lt; 412))
    {
    reap_blank = !reap_blank;
    }
else if (mouse_check_button_pressed(mb_left) &amp;&amp; (mouse_y &gt; 350) &amp;&amp; (mouse_y &lt; 382) &amp;&amp; (mouse_x &gt; 380) &amp;&amp; (mouse_x &lt; 412))
    {
    reap_trans = !reap_trans;
    }
else if (mouse_check_button_pressed(mb_left) &amp;&amp; (mouse_y &gt; 400) &amp;&amp; (mouse_y &lt; 432) &amp;&amp; (mouse_x &gt; 380) &amp;&amp; (mouse_x &lt; 412))
    {
    reap_removeoverlap = !reap_removeoverlap;
    }
else if ((mouse_check_button_pressed(mb_left) &amp;&amp; (mouse_y &gt; 500) &amp;&amp; (mouse_y &lt; 550) &amp;&amp; (mouse_x &gt; 400) &amp;&amp; (mouse_x &lt; 600)) || (keyboard_check_pressed(vk_enter)))
    {
    if (rdy)
        {
        instance_activate_all();
        with (controller) reapply_properties(1);
        visible = 0;
        rdy = 0;
        }
    }
    
draw_sprite(spr_cursor,0,mouse_x,mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
